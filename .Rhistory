?rnorm
args("nrom")
args("norm")
rnorm
y <(10,30,3.4,566,200,3.5);
y <(10 30 3.4 566 200 3.5);
y <- c(10,30,3.4,566,200,3.5);
avg(y)
average(y)
mean(y)
con <-url("sheltechelectronics.com")
con <-url("sheltechelectronics.com");
con <-url("https://www.sheltechelectronics.com");
x<-readLines(con)
head(x)
con <-url("https://www.sheltechelectronics.com");
con <-url("http://www.ncdc.noaa.gov/cdo-web/api/v2/data?datasetid=GSOM&stationid=WBAN:94728&units=standard&startdate=2012-01-01&enddate=2017-01-23&limit=500")
x<-readLines(con)
clear
clear()
data<-read.csv("c:\users\saigsa\desktop\NOOA Rain data.csv")
data<-read.csv("c:/users/saigsa/desktop/NOOA Rain data.csv")
data
data[10]
sum(data[10])
sum
sum(data[10])
sum(data[8])
data[8]
data[8]
data[7]
data["HOURLYPrecip"]
sum(data["HOURLYPrecip"])
D <- 2*A*B + C + 1
A<-c(a[2,3,4],a[3,5,6])
tapply(mean(data))
tapply(mean(data[8]))
tapply(mean(data[10]))
tapply(mean(data[10],0))
tapply(mean(data[10]),0)
tapply(mean(data[8]),0)
tapply(mean(data[7]),0)
tapply(mean(data["ELEVATION"]),0)
data.class(1)
data.class(2)
data.class(4)
data.class(data)
data.class(data[8])
data.class(data[8])
numeric(data[8])
numeric(data[8],6)
numeric(data[8,3])
numeric(data[8,5])
numeric(data[8,2])
numeric(data[8,3])
a<-available.packages()
read(rowname(a),3)
head(rowname(a),3)
head(rownames(a),3)
a
install.packages("slidify")
install.packages("slidify")
install.packages("ggplot2")
library(ggplot2)
list()
ggplot2
search()
find.package(devtools)
installed.packages("devtools")
installed.packages("devtools")
install.packages("KernSmooth")
library(KernSmooth)
search()
search(KernSMooth)
KernSmooth::bkde(12)
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
6:9
quit()
dir()
getwd()
!(8 > 4) ||  5 == 5.0 && 7.8 >= 7.79
6 >= -9 && !(6 > 7) && !(!TRUE)
FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
xor(identical(xor, 'xor'), 7 == 7.0)
xor(!!TRUE, !!FALSE)
xor(4 >= 9, 8 != 8.0)
q()
library(swirl)
swirl()
sys.Date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function()
boring_function
submit()
submit()
submit()
my_mean(c(4,5,10))
sumit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(mean,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]})
evaluate(function(x){x[1]},1)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[-1]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
submit()
telegram("Hello world!")
submit()
submit()
submit()
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
ls()
mad_libs(place="USA",adjective="great",noun="big")
swirl()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t1)
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1,units="days")
source("corr.R")
ls()
source("complete.R")
source("pollutantmean.R")
corr("specdata")
y<=corr("specdata")
y<-corr("specdata")
ls()
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","sulfate",34)
pollutantmean("specdata","nitrate")
x<-pollutantmean("specdata","nitrate")
x
round(x,3)
pollutantmean("specdata","nitrate")
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata","sulfate",34)
pollutantmean("specdata","nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata",34)
print(cc$nobs)
cc <- complete("specdata",54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
set.seed(42)
cc<-complete("specdata",332:1)
use<-sample(332,10)
print(cc[use,"nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
?lapply
a
y
lapply(y,mean)
lapply(y,mean)
y
y
lapply(y,mean(y))
lapply(y,sum)
y
y
$y
x<-1:4
lapply(x,mean)
lapply(x,runif)
lapply(x,function(x+1))
lapply(x,function(){x+1})
lapply(x,function(x){x+1})
lapply(x,function(x){x+10})
lapply(x,function(x){x+10*runif})
lapply(x,function(x){x+10*pi})
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,mean)
apply(x,1,sum)
apply(x,2,sum)
apply(x,sum)
apply(x,1:2sum)
apply(x,1:2,sum)
x<-matrix(rnorm(200),20,10)
apply(x,1,quantile,probs=c(0.25,0.75))
apply(x,1,quantile,probs=c(0.25,0.75))
mapply(rep,1:4,4:1)
mapply(noise,1:5,1:5,2)
mapply(noise,1:5,1:5,2)
str(tapply)
x<-c(rnorm(10),runif(10),rnorm(10,1))
f<-gl(3,10)
f
tapply(x,f,mean)
?split
split(x,f)
?gl
log(-1)
log(1)
log(2)
log(3)
log(3:20)
invisible(12)
load()
print("x")
print(x)
x=log(-1)
x<-log(-1)
x
traceback
traceback(log())
traceback(log)
?traceback
setwd("F:\Home\coursera\projects\ProgrammingAssignment2")
setwd("F:/Home/coursera/projects/ProgrammingAssignment2/")
source("cachematrix.R")
ls()
cacheSolve(m)
m<-makeCacheMatrix(a)
a
class(a)
solve(a)
ll
dir
m<-matrix(rnorm(30),5,5)
m
m<-makeCacheMatrix(m)
cacheSolve(m)
cacheSolve(m)
m<-matrix(rnorm(35),5,5)
m
m<-makeCacheMatrix(matrix(rnorm(35),5,5))
m$get()
cacheSolve(m)
cacheSolve(m)
cacheSolve(m)
m$getMSolve(matrix(rnorm(35),5,5))
m$setMSolve(matrix(rnorm(35),5,5))
